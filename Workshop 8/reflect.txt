/*
*****************************************************************************
						  Workshop - #8
Full Name  : Gurel Sezgin
Student ID#: 174331215
Email      : gurel-sezgin@myseneca.ca

Authenticity Declaration:
I declare this submission is the result of my own work and has not been
shared with any other student or 3rd party content provider. This submitted
piece of work is entirely of my own creation.
*****************************************************************************
*/

In this workshop, I have practiced creating multiple degree of derived classes
which share some pure virtual methods that are overloaded differently. Previously,
I was thinking that the derived class has to declare and implement the pure virtual
methods of its base class, otherwise the it will give a compilation error. I was 
surprised where the base class of Shape has the pure virtual method of draw(), but 
it is not being declared and implemented in its derived class LblShape without a 
problem. 

Overall the workshop was easy, but the most challenging part was to find out the bugs
even with the debugger in overloaded functions, since they have been implemented in 
different files multiple times. For example, there were memory leaks in my constructor:

Rectangle::Rectangle(const char* label, const int width, const int height): LblShape(label)

Due to a process I couldn't fully understand why it is triggered in constructor. The issue 
in LblShape::getSpects() method, I didn't delete m_label first and use new char[] after. 
